trigger:
- none

stages:
- stage: Testing
  jobs:
  - job: Testing
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      displayName: 'print home dir'
      inputs:
        targetType: 'inline'
        script: |
          cd ~
          pwd
      env:
        CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Install Chef WS'
    #   inputs:
    #     targetType: 'inline'
    #     script: '.{ iwr -useb https://omnitruck.chef.io/install.ps1 } | iex; install -channel current -project chef-workstation'
    #   env:
    #     CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Setup Chef WS'
    #   inputs:
    #     targetType: 'filePath'
    #     filePath: $(System.DefaultWorkingDirectory)\pipeline\setup_chef.ps1
    #   env:
    #     CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Export local chef repo'
    #   inputs:
    #     targetType: 'inline'
    #     workingDirectory: $(Build.SourcesDirectory)
    #     script: |
    #       New-Item -Type Directory -Path C:\Temp\chef-zero-repo
    #       C:\opscode\chef-workstation\bin\chef install .\Policyfile.rb
    #       C:\opscode\chef-workstation\bin\chef export .\Policyfile.lock.json C:\Temp\chef-zero-repo
    #   env:
    #     CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Execute chef-zero'
    #   inputs:
    #     targetType: 'inline'
    #     workingDirectory: 'C:\Temp\chef-zero-repo'
    #     script: 'C:\opscode\chef-workstation\bin\chef-client -z'
    #   env:
    #     CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Check if HelloWorld.txt exists'
    #   inputs:
    #     targetType: 'inline'
    #     workingDirectory: $(Build.SourcesDirectory)
    #     script: 'Test-Path C:\Temp\HelloWorld.txt'
