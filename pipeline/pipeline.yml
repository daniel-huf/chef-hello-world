trigger:
- none

stages:
- stage: Testing
  jobs:
  - job: Testing
    pool:
      vmImage: 'windows-latest'
    steps:
    # - task: PowerShell@2
    #   displayName: 'Install Chef WS'
    #   inputs:
    #     targetType: 'inline'
    #     script: '.{ iwr -useb https://omnitruck.chef.io/install.ps1 } | iex; install -channel current -project chef-workstation'
    #   env:
    #     CHEF_LICENSE: accept
    - task : PowerShell@2
      displayName: 'Print Sources Directory (write-output dir)'
      inputs:
        targetType: 'inline'
        workingDirectory: $(Build.SourcesDirectory)
        script: 'Write-Output $(Build.SourcesDirectory)'
      env:
        CHEF_LICENSE: accept
    - task : PowerShell@2
      displayName: 'Get sources dir path (pwd)'
      inputs:
        targetType: 'inline'
        workingDirectory: $(Build.SourcesDirectory)
        script: 'pwd'
      env:
        CHEF_LICENSE: accept
    - task: PowerShell@2
      displayName: 'Print System Default Working Dir pwd'
      inputs:
        targetType: 'inline'
        workingDirectory: $(System.DefaultWorkingDirectory)
        scipt: 'pwd'
    - task: PowerShell@2
      displayName: 'Print System Default Working Dir variable'
      inputs:
        targetType: 'inline'
        workingDirectory: $(System.DefaultWorkingDirectory)
        scipt: 'Write-Output $(System.DefaultWorkingDirectory)'
    - task: PowerShell@2
      displayName: 'Check if C:\Temp\ dir exists'
      inputs:
        targetType: 'filePath'
        filePath: $(System.DefaultWorkingDirectory)\pipeline\test-dir.ps1
    - task: PowerShell@2
      displayName: 'Check if test-dir still exists'
      inputs: 
        targetType: 'inline'
        script: 'Test-Path -Path C:\Temp\test-dir'
    # - task: CmdLine@2
    #   displayName: 'Check cookbook with cookstyle'
    #   inputs:
    #     workingDirectory: $(Build.SourcesDirectory)
    #     script: cookstyle .
    #   env:
    #     CHEF_LICENSE: accept
    # - task: PowerShell@2
    #   displayName: 'Run chef localy'
    #   inputs:
    #     targetType: 'inline'
    #     workingDirectory: $(Build.SourcesDirectory)
    #     script: 'here-the-magic-happens'
    #   env:
    #     CHEF_LICENSE: accept
